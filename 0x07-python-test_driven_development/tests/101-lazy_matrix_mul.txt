===============================
101-lazy_matrix_mul.py
===============================

Function that multiplies 2 matrices.

=======

``lazy_matrix_mul()`` multiplies 2 matrices.

::

    >>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul
    >>> lazy_matrix_mul([[1, 2, 3], [4, 5, 6], [7, 8, 9]], [[1, 2, 3], [4, 5, 6], [7, 8, 9]])
    array([[ 30,  36,  42],
           [ 66,  81,  96],
           [102, 126, 150]])

It works with simple case:

::
    >>> lazy_matrix_mul([[2]], [[3]])
    array([[6]])

ValueError can't be multiplied shape:

::
    >>> lazy_matrix_mul([], [[2]])
    Traceback (most recent call last):
    ValueError: shapes (0,) and (1,1) not aligned: 0 (dim 0) != 1 (dim 0)

ValueError empty matrix m_b:

::
    >>> lazy_matrix_mul([[2]], [])
    Traceback (most recent call last):
    ValueError: shapes (1,1) and (0,) not aligned: 1 (dim 1) != 0 (dim 0)

TypeError no num:

::
    >>> lazy_matrix_mul({1, 2}, [[2]])
    Traceback (most recent call last):
    TypeError: Object arrays are not currently supported

TypeError no num:

::
    >>> lazy_matrix_mul([[2]], {1, 2})
    Traceback (most recent call last):
    TypeError: Object arrays are not currently supported

ValueError String

::
    >>> lazy_matrix_mul([(1, 2), [2]], [[2]])
    Traceback (most recent call last):
    ValueError: setting an array element with a sequence.
    

ValueError String

::
    >>> lazy_matrix_mul([[2]], "1, 2")
    Traceback (most recent call last):
    ValueError: Scalar operands are not allowed, use '*' instead
    

TypeError string:

::
    >>> lazy_matrix_mul([["Hello"]], [[2]])
    Traceback (most recent call last):
    TypeError: invalid data type for einsum

TypeError string:

::
    >>> lazy_matrix_mul([[2]], [["Hello"]])
    Traceback (most recent call last):
    TypeError: invalid data type for einsum

None

TypeError None:

::
    >>> lazy_matrix_mul(None, [[2]])
    Traceback (most recent call last):
    TypeError: Object arrays are not currently supported

TypeError None:

::
    >>> lazy_matrix_mul([[2]], None)
    Traceback (most recent call last):
    TypeError: Object arrays are not currently supported

ValueError matrix list of list:

::
    >>> lazy_matrix_mul([1, 2, 3], [[2]])
    Traceback (most recent call last):
    ValueError: shapes (3,) and (1,1) not aligned: 3 (dim 0) != 1 (dim 0)

No TypeError matrix list of list:

::
    >>> lazy_matrix_mul([[2]], [1, 2, 3])
    Traceback (most recent call last):
    ValueError: shapes (1,1) and (3,) not aligned: 1 (dim 1) != 3 (dim 0)

ValueError not same size:

::
    >>> lazy_matrix_mul([[1, 2], [3, 4, 5], [6, 7]], [[1, 2, 3], [4, 5, 6]])
    Traceback (most recent call last):
    ValueError: setting an array element with a sequence.

ValueError not same size:

::
    >>> lazy_matrix_mul([[1, 2], [3, 4], [6, 7]], [[1, 2, 3], [4, 5]])
    Traceback (most recent call last):
    ValueError: setting an array element with a sequence.

TypeError one missing argument:

::
    >>> lazy_matrix_mul([[2]])
    Traceback (most recent call last):
    TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'

TypeError missing both arguments:

::
    >>> lazy_matrix_mul()
    Traceback (most recent call last):
    TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

ValueError no num:

::
    >>> lazy_matrix_mul([[1, "2"], [3, 4]], [[5, 6], [7, 8]])
    Traceback (most recent call last):
    TypeError: invalid data type for einsum

ValueError no num:

::
    >>> lazy_matrix_mul([[1, 2], [3, 4]], [[5, "6"], [7, 8]])
    Traceback (most recent call last):
    TypeError: invalid data type for einsum

TypeError None None:

::
    >>> print(lazy_matrix_mul(None, None))
    Traceback (most recent call last):
    TypeError: Object arrays are not currently supported
